name: Train and Release ML Model

on:
  push:
    paths:
      - 'MLProject/modelling.py'
      - 'MLProject/crop_data_cleaned.csv'
      - '.github/workflows/retrain.yaml'
  workflow_dispatch:

env:
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/msml-crop-mlflow:latest
  DAGSHUB_USER_TOKEN: ${{ secrets.DAGSHUB_USER_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  train-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pandas xgboost scikit-learn matplotlib seaborn dotenv dagshub
          pip install "mlflow>=2.3.0"

      - name: Set MLflow Tracking URI
        run: |
          echo "MLFLOW_TRACKING_URI=https://dagshub.com/ffauzan/msml-crop.mlflow" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_USERNAME=ffauzan" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_PASSWORD=${{ secrets.DAGSHUB_USER_TOKEN }}" >> $GITHUB_ENV

      - name: Run training script
        working-directory: MLProject
        run: |
          python modelling.py

      - name: Get run_id
        working-directory: MLProject
        run: |
          echo "RUN_ID=$(cat run_id.txt)" >> $GITHUB_ENV

      - name: Archive model artifact
        uses: actions/upload-artifact@v4
        with:
          name: mlflow_model
          path: MLProject/artifacts/mlflow_model

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: 'v1.0.0'
          name: 'ML Model Release'
          files: MLProject/artifacts/mlflow_model/**

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate Dockerfile for MLflow model
        working-directory: MLProject
        run: |
          mlflow models generate-dockerfile -m "runs:/$RUN_ID/model"

      - name: Build and push multi-arch Docker image
        working-directory: MLProject
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 -t $DOCKER_IMAGE --push .